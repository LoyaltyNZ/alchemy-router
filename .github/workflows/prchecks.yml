name: PRChecks

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-20.04

    services:
      memcached:
        image: memcached:latest
        ports:
        - 11211:11211
        options: >-
          --health-cmd "timeout 5 bash -c 'cat < /dev/null > /dev/udp/127.0.0.1/11211'" 
          --health-interval 10s 
          --health-timeout 5s
          --health-retries 5
      rabbitmq:
        image: rabbitmq:latest
        ports:
        - 5672:5672
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [8.11.4]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        always-auth: true

    - name: Install project dependencies
      run: | 
        npm install

    - name: Install audit-filter
      run: npm install -g audit-filter@0.5.0
      shell: /usr/bin/bash -e {0}
      
    - name: Run npm audit and filter results
      run: |
        # Run npm audit and save the output to a file
        npm audit --json > audit-output.json
        # Display the contents of the JSON file for debugging
        cat audit-output.json
        # Run audit-filter with the JSON output
        cat audit-output.json | audit-filter --nsp-config=.nsprc --audit=-
      shell: /usr/bin/bash -e {0}
      env:
        NPM_CONFIG_USERCONFIG: /home/runner/work/_temp/.npmrc
        NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}

    - name: Build and Test
      run: |
        export CXX="g++-4.8"
        npm test

